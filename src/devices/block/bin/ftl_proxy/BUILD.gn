# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")
import("//src/lib/isolated_devmgr/devmgr_manifest.gni")
import("//third_party/cobalt/metrics_registry.gni")

group("tests") {
  testonly = true
  deps = [ ":ftl-proxy-tests" ]
}

metrics_registry("local_storage_metrics") {
  project_id = 3676913920
  namespace = "cobalt_registry"
  generate_cc = true
  generate_binarypb = false
}

source_set("ftl-util") {
  sources = [ "ftl_util.cc" ]
  public = [ "ftl_util.h" ]
  public_deps = [ "//zircon/public/lib/zx" ]
  deps = [
    "//sdk/fidl/fuchsia.device:fuchsia.device_llcpp",
    "//sdk/fidl/fuchsia.hardware.block:fuchsia.hardware.block_llcpp",
    "//sdk/lib/fdio",
    "//src/lib/fxl",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fit",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/inspect",
  ]
}

executable("ftl-proxy-bin") {
  output_name = "ftl-proxy"
  sources = [ "main.cc" ]
  deps = [
    ":ftl-util",
    ":local_storage_metrics",
    "//sdk/fidl/fuchsia.cobalt:fuchsia.cobalt_llcpp",
    "//sdk/lib/fdio",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//zircon/public/lib/fidl",
  ]
}

executable("ftl-proxy-bin-test") {
  output_name = "ftl-proxy-test"
  testonly = true
  sources = [ "ftl_util_test.cc" ]
  deps = [
    ":ftl-util",
    "//sdk/lib/fdio",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gtest",
    "//zircon/public/lib/async",
    "//zircon/public/lib/sync",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/async-testing",
    "//zircon/system/ulib/devmgr-integration-test",
    "//zircon/system/ulib/devmgr-launcher",
    "//zircon/system/ulib/driver-integration-test",
    "//zircon/system/ulib/ramdevice-client",
  ]
}

devmgr_manifest("devmgr-manifest") {
}

package("ftl-proxy") {
  deps = [ ":ftl-proxy-bin" ]
  binaries = [
    {
      name = "ftl-proxy"
      shell = true
    },
  ]

  meta = [
    {
      path = rebase_path("meta/ftl-proxy.cmx")
      dest = "ftl-proxy.cmx"
    },
  ]
}

test_package("ftl-proxy-tests") {
  deps = [
    ":devmgr-manifest",
    ":ftl-proxy-bin-test",
  ]

  extra = [ "$target_gen_dir/devmgr.manifest" ]
  tests = [
    {
      name = "ftl-proxy-test"
      environments = basic_envs
    },
  ]
}
