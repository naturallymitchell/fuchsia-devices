# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# WARNING: THIS FILE IS MACHINE GENERATED. DO NOT EDIT.
# Generated from the banjo.examples.syzkaller.protocol.resources banjo file

resource zx_handle[int32]: ZX_HANDLE_INVALID
resource zx_process[int32]: ZX_HANDLE_INVALID
resource zx_thread[int32]: ZX_HANDLE_INVALID
resource zx_vmo[int32]: ZX_HANDLE_INVALID
resource zx_channel[int32]: ZX_HANDLE_INVALID
resource zx_event[int32]: ZX_HANDLE_INVALID
resource zx_port[int32]: ZX_HANDLE_INVALID
resource zx_interrupt[int32]: ZX_HANDLE_INVALID
resource zx_log[int32]: ZX_HANDLE_INVALID
resource zx_socket[int32]: ZX_HANDLE_INVALID
resource zx_resource[int32]: ZX_HANDLE_INVALID
resource zx_eventpair[int32]: ZX_HANDLE_INVALID
resource zx_job[int32]: ZX_HANDLE_INVALID
resource zx_vmar[int32]: ZX_HANDLE_INVALID
resource zx_fifo[int32]: ZX_HANDLE_INVALID
resource zx_guest[int32]: ZX_HANDLE_INVALID
resource zx_timer[int32]: ZX_HANDLE_INVALID
resource zx_bti[int32]: ZX_HANDLE_INVALID
resource zx_profile[int32]: ZX_HANDLE_INVALID
resource zx_debuglog[int32]: ZX_HANDLE_INVALID
resource zx_vcpu[int32]: ZX_HANDLE_INVALID
resource zx_iommu[int32]: ZX_HANDLE_INVALID
resource zx_pager[int32]: ZX_HANDLE_INVALID
resource zx_pmt[int32]: ZX_HANDLE_INVALID
resource zx_clock[int32]
resource zx_duration[int64]
resource zx_gpaddr[int64]
resource zx_koid[int64]: 0
resource zx_off[int64]
resource zx_paddr[int64]
resource zx_paddr32[int32]
resource zx_rights[int32]
resource zx_signals[int32]
resource zx_time[int64]: 0, ZX_TIME_INFINITE
resource zx_vaddr[int64]
resource zx_vm_option[int32]

zx_producer(options int32, out ptr[out, zx_handle])
zx_consumer(h zx_handle)
zx_producer(options int32, out ptr[out, zx_process])
zx_consumer(h zx_process)
zx_producer(options int32, out ptr[out, zx_thread])
zx_consumer(h zx_thread)
zx_producer(options int32, out ptr[out, zx_vmo])
zx_consumer(h zx_vmo)
zx_producer(options int32, out ptr[out, zx_channel])
zx_consumer(h zx_channel)
zx_producer(options int32, out ptr[out, zx_event])
zx_consumer(h zx_event)
zx_producer(options int32, out ptr[out, zx_port])
zx_consumer(h zx_port)
zx_producer(options int32, out ptr[out, zx_interrupt])
zx_consumer(h zx_interrupt)
zx_producer(options int32, out ptr[out, zx_log])
zx_consumer(h zx_log)
zx_producer(options int32, out ptr[out, zx_socket])
zx_consumer(h zx_socket)
zx_producer(options int32, out ptr[out, zx_resource])
zx_consumer(h zx_resource)
zx_producer(options int32, out ptr[out, zx_eventpair])
zx_consumer(h zx_eventpair)
zx_producer(options int32, out ptr[out, zx_job])
zx_consumer(h zx_job)
zx_producer(options int32, out ptr[out, zx_vmar])
zx_consumer(h zx_vmar)
zx_producer(options int32, out ptr[out, zx_fifo])
zx_consumer(h zx_fifo)
zx_producer(options int32, out ptr[out, zx_guest])
zx_consumer(h zx_guest)
zx_producer(options int32, out ptr[out, zx_guest])
zx_consumer(h zx_guest)
zx_producer(options int32, out ptr[out, zx_timer])
zx_consumer(h zx_timer)
zx_producer(options int32, out ptr[out, zx_bti])
zx_consumer(h zx_bti)
zx_producer(options int32, out ptr[out, zx_profile])
zx_consumer(h zx_profile)
zx_producer(options int32, out ptr[out, zx_debuglog])
zx_consumer(h zx_debuglog)
zx_producer(options int32, out ptr[out, zx_vcpu])
zx_consumer(h zx_vcpu)
zx_producer(options int32, out ptr[out, zx_iommu])
zx_consumer(h zx_iommu)
zx_producer(options int32, out ptr[out, zx_pager])
zx_consumer(h zx_pager)
zx_producer(options int32, out ptr[out, zx_pmt])
zx_consumer(h zx_pmt)
zx_producer(h zx_handle) zx_time
zx_producer2(h zx_handle, out ptr[out, zx_time])
zx_consumer(t zx_time)
zx_producer(h zx_handle) zx_duration
zx_producer2(h zx_handle, out ptr[out, zx_duration])
zx_consumer(d zx_duration)
zx_producer(h zx_handle) zx_clock
zx_producer2(h zx_handle, out ptr[out, zx_clock])
zx_consumer(cid zx_clock)
zx_producer(h zx_handle) zx_koid
zx_producer2(h zx_handle, out ptr[out, zx_koid])
zx_consumer(id zx_koid)
zx_producer(h zx_handle) zx_vaddr
zx_producer2(h zx_handle, out ptr[out, zx_vaddr])
zx_consumer(va zx_vaddr)
zx_producer(h zx_handle) zx_paddr
zx_producer2(h zx_handle, out ptr[out, zx_paddr])
zx_consumer(pa zx_paddr)
zx_producer(h zx_handle) zx_paddr32
zx_producer2(h zx_handle, out ptr[out, zx_paddr32])
zx_consumer(pa32 zx_paddr32)
zx_producer(h zx_handle) zx_gpaddr
zx_producer2(h zx_handle, out ptr[out, zx_gpaddr])
zx_consumer(gpa zx_gpaddr)
zx_producer(h zx_handle) zx_off
zx_producer2(h zx_handle, out ptr[out, zx_off])
zx_consumer(o zx_off)
zx_producer(h zx_handle) zx_rights
zx_producer2(h zx_handle, out ptr[out, zx_rights])
zx_consumer(r zx_rights)
zx_producer(h zx_handle) zx_signals
zx_producer2(h zx_handle, out ptr[out, zx_signals])
zx_consumer(s zx_signals)
zx_producer(h zx_handle) zx_vm_option
zx_producer2(h zx_handle, out ptr[out, zx_vm_option])
zx_consumer(op zx_vm_option)