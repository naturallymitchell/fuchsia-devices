# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# WARNING: THIS FILE IS MACHINE GENERATED. DO NOT EDIT.
# Generated from the banjo.examples.syzkaller.struct banjo file

point {
	x	int32
	y	int32
}

primitive_types {
	b	bool8
	i8	int8
	i16	int16
	i32	int32
	i64	int64
	u8	int8
	u16	int16
	u32	int32
	u64	int64
	h	int32
}

strings {
	rd_str	ptr[out, string]
	wr_str	ptr[in, string]
	rd_str_len	len[rd_str]
	wr_str_len	len[wr_str]
}

arrays {
	rd_vptr	ptr[out, array[int8]]
	wr_vptr	ptr[in, array[int8]]
	rd_vptr_len	bytesize[rd_vptr]
	wr_vptr_len	bytesize[wr_vptr]
	rd_sz	ptr[in, array[intptr]]
	rd_sz	ptr[in, array[intptr]]
	rd_sz_len	len[rd_sz]
	wr_sz_len	len[rd_sz]
	rd_b	ptr[out, array[bool8]]
	wr_b	ptr[in, array[bool8]]
	rd_b_len	len[rd_b]
	wr_b_len	len[wr_b]
	rd_i8	ptr[out, array[int8]]
	wr_i8	ptr[in, array[int8]]
	rd_i8_len	len[rd_i8]
	wr_i8_len	len[wr_i8]
	rd_i16	ptr[out, array[int16]]
	wr_i16	ptr[in, array[int16]]
	rd_i16_len	len[rd_i16]
	wr_i16_len	len[wr_i16]
	rd_i32	ptr[out, array[int32]]
	wr_i32	ptr[in, array[int32]]
	rd_i32_len	len[rd_i32]
	wr_i32_len	len[wr_i32]
	rd_i64	ptr[out, array[int64]]
	wr_i64	ptr[in, array[int64]]
	rd_i64_len	len[rd_i64]
	wr_i64_len	len[wr_i64]
	rd_u8	ptr[out, array[int8]]
	wr_u8	ptr[in, array[int8]]
	rd_u8_len	len[rd_u8]
	wr_u8_len	len[wr_u8]
	rd_u16	ptr[out, array[int16]]
	wr_u16	ptr[in, array[int16]]
	rd_u16_len	len[rd_u16]
	wr_u16_len	len[wr_u16]
	rd_u32	ptr[out, array[int32]]
	wr_u32	ptr[in, array[int32]]
	rd_u32_len	len[rd_u32]
	wr_u32_len	len[wr_u32]
	rd_u64	ptr[out, array[int64]]
	wr_u64	ptr[in, array[int64]]
	rd_u64_len	len[rd_u64]
	wr_u64_len	len[wr_u64]
	rd_h	ptr[out, array[int32]]
	wr_h	ptr[in, array[int32]]
	rd_h_len	len[rd_h]
	wr_h_len	len[wr_h]
}

zx_point(h int32, pt point)