// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library banjo.examples.protocolbase;

using zx;

[BanjoLayout = "ddk-protocol"]
protocol SynchronousBase {
    Status(zx.status status) -> (zx.status status, zx.status status_2);
    Time(zx.time time) -> (zx.time time, zx.time time_2);
    Duration(zx.duration duration) -> (zx.duration duration, zx.duration duration_2);
    Koid(zx.koid koid) -> (zx.koid koid, zx.koid koid_2);
    Vaddr(zx.vaddr vaddr) -> (zx.vaddr vaddr, zx.vaddr vaddr_2);
    Paddr(zx.paddr paddr) -> (zx.paddr paddr, zx.paddr paddr_2);
    Paddr32(zx.paddr32 paddr32) -> (zx.paddr32 paddr32, zx.paddr32 paddr32_2);
    Gpaddr(zx.gpaddr gpaddr) -> (zx.gpaddr gpaddr, zx.gpaddr gpaddr_2);
    Off(zx.off off) -> (zx.off off, zx.off off_2);
};

[BanjoLayout = "ddk-protocol"]
protocol AsyncBase {
    [Async]
    Status(zx.status status) -> (zx.status status, zx.status status_2);
    [Async]
    Time(zx.time time) -> (zx.time time, zx.time time_2);
    [Async]
    Duration(zx.duration duration) -> (zx.duration duration, zx.duration duration_2);
    [Async]
    Koid(zx.koid koid) -> (zx.koid koid, zx.koid koid_2);
    [Async]
    Vaddr(zx.vaddr vaddr) -> (zx.vaddr vaddr, zx.vaddr vaddr_2);
    [Async]
    Paddr(zx.paddr paddr) -> (zx.paddr paddr, zx.paddr paddr_2);
    [Async]
    Paddr32(zx.paddr32 paddr32) -> (zx.paddr32 paddr32, zx.paddr32 paddr32_2);
    [Async]
    Gpaddr(zx.gpaddr gpaddr) -> (zx.gpaddr gpaddr, zx.gpaddr gpaddr_2);
    [Async]
    Off(zx.off off) -> (zx.off off, zx.off off_2);
};
