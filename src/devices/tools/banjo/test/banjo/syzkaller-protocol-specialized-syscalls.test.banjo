// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library banjo.examples.syzkaller.protocol.specialized.syscalls;

resource handle<job>: ZX_HANDLE_INVALID;
resource handle<process>: ZX_HANDLE_INVALID;
resource handle<thread>: ZX_HANDLE_INVALID;

enum zx_create_options {
    VARIANT0 = 0;
    VARIANT1 = 1;
    VARIANT2 = 2;
};

// 1-1 mapping with zx_create_options
[argtype = "type0 IN",
 argtype = "type1 IN",
 argtype = "type2 IN"]
union zx_create_types {
    array<int8>:1 type0;
    array<int16>:1 type1;
    array<int32>:1 type2;
};

union zx_handle_types {
    handle<job> type0;
    handle<process> type1;
    handle<thread> type2;
};

protocol Api {
    [valueset = "options zx_create_options",
     typeset = "buffer zx_create_types",
     typeset = "handle zx_handle_types"
     dependency = "options buffer",
     dependency = "options handle",
     argtype = "buffer IN"]
    create(handle handle, int32 options, array<voidptr>:buffer_size buffer, usize buffer_size) -> (zx.status st);
};
