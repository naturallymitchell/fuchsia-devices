# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/drivers.gni")

config("factory") {
  defines = [ "FACTORY_BUILD" ]
}

config("rndis") {
  defines = [ "ENABLE_RNDIS=1" ]
}

driver_bind_rules("sherlock-bind") {
  rules = "sherlock.bind"
  header_output = "sherlock-bind.h"
  bind_output = "sherlock.bindbc"
  tests = "sherlock-bind-tests.json"
  deps = [
    "//src/devices/bind/fuchsia.google.platform",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("luis-bind") {
  rules = "luis.bind"
  header_output = "luis-bind.h"
  bind_output = "luis.bindbc"
  tests = "luis-bind-tests.json"
  deps = [
    "//src/devices/bind/fuchsia.google.platform",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("sherlock-buttons-bind") {
  rules = "bind/sherlock-buttons.bind"
  header_output = "sherlock-buttons-bind.h"
  bind_output = "sherlock-buttons-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
  ]
}

driver_bind_rules("sherlock-touch-bind") {
  rules = "bind/sherlock-touch.bind"
  header_output = "sherlock-touch-bind.h"
  bind_output = "sherlock-touch-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.i2c",
  ]
}

driver_bind_rules("luis-touch-bind") {
  rules = "bind/luis-touch.bind"
  header_output = "luis-touch-bind.h"
  bind_output = "luis-touch-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.i2c",
  ]
}

driver_bind_rules("sherlock-pwm-bind") {
  rules = "bind/sherlock-pwm.bind"
  header_output = "sherlock-pwm-bind.h"
  bind_output = "sherlock-pwm-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("sherlock-backlight-bind") {
  rules = "bind/sherlock-backlight.bind"
  header_output = "sherlock-backlight-bind.h"
  bind_output = "sherlock-backlight-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.i2c",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.texasinstruments.platform",
  ]
}

driver_bind_rules("sherlock-display-bind") {
  rules = "bind/sherlock-display.bind"
  header_output = "sherlock-display-bind.h"
  bind_output = "sherlock-display_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.dsi",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
  ]
}

driver_bind_rules("sherlock-mali-bind") {
  rules = "bind/sherlock-mali.bind"
  header_output = "sherlock-mali-bind.h"
  bind_output = "sherlock-mali-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.registers",
  ]
}

driver_bind_rules("sherlock-spi-bind") {
  rules = "bind/sherlock-spi.bind"
  header_output = "sherlock-spi-bind.h"
  bind_output = "sherlock-spi-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("sherlock-tee-bind") {
  rules = "bind/sherlock-tee.bind"
  header_output = "sherlock-tee-bind.h"
  bind_output = "sherlock-tee-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.rpmb",
    "//src/devices/bind/fuchsia.sysmem",
  ]
}

driver_bind_rules("sherlock-bluetooth-bind") {
  rules = "bind/sherlock-bluetooth.bind"
  header_output = "sherlock-bluetooth-bind.h"
  bind_output = "sherlock-bluetooth-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("sherlock-video-bind") {
  rules = "bind/sherlock-video.bind"
  header_output = "sherlock-video-bind.h"
  bind_output = "sherlock-video-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
    "//src/devices/bind/fuchsia.tee",
  ]
}

driver_bind_rules("sherlock-video-enc-bind") {
  rules = "bind/sherlock-video-enc.bind"
  header_output = "sherlock-video-enc-bind.h"
  bind_output = "sherlock-video-enc-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
  ]
}

driver_bind_rules("sherlock-hevc-enc-bind") {
  rules = "bind/sherlock-hevc-enc.bind"
  header_output = "sherlock-hevc-enc-bind.h"
  bind_output = "sherlock-hevc-enc-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
  ]
}

driver_bind_rules("luis-cpu-bind") {
  rules = "bind/luis-cpu.bind"
  header_output = "luis-cpu-bind.h"
  bind_output = "luis-cpu-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.google.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.power",
    "//src/devices/bind/fuchsia.thermal",
  ]
}

driver_bind_rules("sherlock-cpu-bind") {
  rules = "bind/sherlock-cpu.bind"
  header_output = "sherlock-cpu-bind.h"
  bind_output = "sherlock-cpu-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.google.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.thermal",
  ]
}

driver_bind_rules("sherlock-emmc-bind") {
  rules = "bind/sherlock-emmc.bind"
  header_output = "sherlock-emmc-bind.h"
  bind_output = "sherlock-emmc-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("sherlock-nna-bind") {
  rules = "bind/sherlock-nna.bind"
  header_output = "sherlock-nna-bind.h"
  bind_output = "sherlock-nna-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.registers",
  ]
}

driver_bind_rules("sherlock-securemem-bind") {
  rules = "bind/sherlock-securemem.bind"
  header_output = "sherlock-securemem-bind.h"
  bind_output = "sherlock-securemem-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
    "//src/devices/bind/fuchsia.tee",
  ]
}

driver_bind_rules("aml-usb-phy-v2-bind") {
  rules = "bind/aml-usb-phy-v2.bind"
  header_output = "aml-usb-phy-v2-bind.h"
  bind_output = "aml-usb-phy-v2-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.registers",
  ]
}

driver_bind_rules("dwc2-phy-bind") {
  rules = "bind/dwc2-phy.bind"
  header_output = "dwc2-phy-bind.h"
  bind_output = "dwc2-phy-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.usb.phy",
  ]
}

driver_bind_rules("xhci-bind") {
  rules = "bind/xhci.bind"
  header_output = "xhci-bind.h"
  bind_output = "xhci-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.usb.phy",
  ]
}

driver_bind_rules("gpio-light-bind") {
  rules = "bind/gpio-light.bind"
  header_output = "gpio-light-bind.h"
  bind_output = "gpio-light-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.i2c",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("sherlock-light-sensor-bind") {
  rules = "bind/sherlock-light-sensor.bind"
  header_output = "sherlock-light-sensor-bind.h"
  bind_output = "sherlock-light-sensor-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.i2c",
  ]
}

driver_bind_rules("sherlock-ot-radio-bind") {
  rules = "bind/sherlock-ot-radio.bind"
  header_output = "sherlock-ot-radio-bind.h"
  bind_output = "sherlock-ot-radio-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.google.platform",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.nordic.platform",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("sherlock-thermal-bind") {
  rules = "bind/sherlock-thermal.bind"
  header_output = "sherlock-thermal-bind.h"
  bind_output = "sherlock-thermal-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("sherlock-sdio-bind") {
  rules = "bind/sherlock-sdio.bind"
  header_output = "sherlock-sdio-bind.h"
  bind_output = "sherlock-sdio-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("sherlock-wifi-bind") {
  rules = "bind/sherlock-wifi.bind"
  header_output = "sherlock-wifi-bind.h"
  bind_output = "sherlock-wifi-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.sdio",
  ]
}

driver_bind_rules("imx227-sensor-bind") {
  rules = "bind/imx227-sensor.bind"
  header_output = "imx227-sensor-bind.h"
  bind_output = "imx227-sensor-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.amlogic.platform.t931",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.i2c",
    "//src/devices/bind/fuchsia.mipicsi",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sony.platform",
  ]
}

driver_bind_rules("camera-gdc-bind") {
  rules = "bind/camera-gdc.bind"
  header_output = "camera-gdc-bind.h"
  bind_output = "camera-gdc-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.arm.platform",
    "//src/devices/bind/fuchsia.camerasensor2",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("camera-ge2d-bind") {
  rules = "bind/camera-ge2d.bind"
  header_output = "camera-ge2d-bind.h"
  bind_output = "camera-ge2d-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.camerasensor2",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("camera-isp-bind") {
  rules = "bind/camera-isp.bind"
  header_output = "camera-isp-bind.h"
  bind_output = "camera-isp-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.arm.platform",
    "//src/devices/bind/fuchsia.camerasensor2",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.registers",
  ]
}

driver_bind_rules("camera-controller-bind") {
  rules = "bind/camera-controller.bind"
  header_output = "camera-controller-bind.h"
  bind_output = "camera-controller-bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.gdc",
    "//src/devices/bind/fuchsia.ge2d",
    "//src/devices/bind/fuchsia.isp",
    "//src/devices/bind/fuchsia.sysmem",
  ]
}

driver_bind_rules("luis-codec-bind") {
  rules = "bind/luis-codec.bind"
  header_output = "luis-codec-bind.h"
  bind_output = "luis-codec-bind.bc"
  deps = [ "//src/devices/bind/fuchsia.i2c" ]
}

driver_bind_rules("sherlock-woofer-bind") {
  rules = "bind/sherlock-woofer.bind"
  header_output = "sherlock-woofer-bind.h"
  bind_output = "sherlock-woofer-bind.bc"
  deps = [ "//src/devices/bind/fuchsia.i2c" ]
}

driver_bind_rules("sherlock-tweeter-left-bind") {
  rules = "bind/sherlock-tweeter-left.bind"
  header_output = "sherlock-tweeter-left-bind.h"
  bind_output = "sherlock-tweeter-left-bind.bc"
  deps = [ "//src/devices/bind/fuchsia.i2c" ]
}

driver_bind_rules("sherlock-tweeter-right-bind") {
  rules = "bind/sherlock-tweeter-right.bind"
  header_output = "sherlock-tweeter-right-bind.h"
  bind_output = "sherlock-tweeter-right-bind.bc"
  deps = [ "//src/devices/bind/fuchsia.i2c" ]
}

driver_bind_rules("ernie-tweeter-bind") {
  rules = "bind/ernie-tweeter.bind"
  header_output = "ernie-tweeter-bind.h"
  bind_output = "ernie-tweeter-bind.bc"
  deps = [ "//src/devices/bind/fuchsia.i2c" ]
}

driver_bind_rules("ernie-woofer-bind") {
  rules = "bind/ernie-woofer.bind"
  header_output = "ernie-woofer-bind.h"
  bind_output = "ernie-woofer-bind.bc"
  deps = [ "//src/devices/bind/fuchsia.i2c" ]
}

template("sherlock_driver") {
  fuchsia_driver(target_name + "-driver") {
    output_name = invoker.target_name
    forward_variables_from(invoker, "*")

    configs += [
      "//build/config:all_source",
      "//build/config/fuchsia:enable_zircon_asserts",
    ]
    if (use_factory) {
      configs += [ ":factory" ]
    }
    if (enable_rndis) {
      configs += [ ":rndis" ]
    }

    sources = [
      "luis-cpu.cc",
      "luis-power.cc",
      "luis-thermal.cc",
      "sherlock-audio.cc",
      "sherlock-backlight.cc",
      "sherlock-bluetooth.cc",
      "sherlock-board.cc",
      "sherlock-buttons.cc",
      "sherlock-camera.cc",
      "sherlock-canvas.cc",
      "sherlock-clk.cc",
      "sherlock-cpu.cc",
      "sherlock-display.cc",
      "sherlock-dsi.cc",
      "sherlock-emmc.cc",
      "sherlock-gpio.cc",
      "sherlock-hevc-enc.cc",
      "sherlock-i2c.cc",
      "sherlock-light.cc",
      "sherlock-mali.cc",
      "sherlock-nna.cc",
      "sherlock-ot-radio.cc",
      "sherlock-pwm.cc",
      "sherlock-ram.cc",
      "sherlock-registers.cc",
      "sherlock-sdio.cc",
      "sherlock-securemem.cc",
      "sherlock-spi.cc",
      "sherlock-sysmem.cc",
      "sherlock-tee.cc",
      "sherlock-thermal.cc",
      "sherlock-thermistor.cc",
      "sherlock-touch.cc",
      "sherlock-usb.cc",
      "sherlock-video-enc.cc",
      "sherlock-video.cc",
      "sherlock.cc",
    ]

    deps = [
      ":aml-usb-phy-v2-bind_header",
      ":camera-controller-bind_header",
      ":camera-gdc-bind_header",
      ":camera-ge2d-bind_header",
      ":camera-isp-bind_header",
      ":dwc2-phy-bind_header",
      ":ernie-tweeter-bind_header",
      ":ernie-woofer-bind_header",
      ":gpio-light-bind_header",
      ":imx227-sensor-bind_header",
      ":luis-codec-bind_header",
      ":luis-cpu-bind_header",
      ":luis-touch-bind_header",
      ":sherlock-backlight-bind_header",
      ":sherlock-bluetooth-bind_header",
      ":sherlock-buttons-bind_header",
      ":sherlock-cpu-bind_header",
      ":sherlock-display-bind_header",
      ":sherlock-emmc-bind_header",
      ":sherlock-hevc-enc-bind_header",
      ":sherlock-light-sensor-bind_header",
      ":sherlock-mali-bind_header",
      ":sherlock-nna-bind_header",
      ":sherlock-ot-radio-bind_header",
      ":sherlock-pwm-bind_header",
      ":sherlock-sdio-bind_header",
      ":sherlock-securemem-bind_header",
      ":sherlock-spi-bind_header",
      ":sherlock-tee-bind_header",
      ":sherlock-thermal-bind_header",
      ":sherlock-touch-bind_header",
      ":sherlock-tweeter-left-bind_header",
      ":sherlock-tweeter-right-bind_header",
      ":sherlock-video-bind_header",
      ":sherlock-video-enc-bind_header",
      ":sherlock-wifi-bind_header",
      ":sherlock-woofer-bind_header",
      ":xhci-bind_header",
      "//sdk/banjo/fuchsia.hardware.clock:fuchsia.hardware.clock_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.clockimpl:fuchsia.hardware.clockimpl_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.gpio:fuchsia.hardware.gpio_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.gpioimpl:fuchsia.hardware.gpioimpl_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.iommu:fuchsia.hardware.iommu_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.platform.bus:fuchsia.hardware.platform.bus_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.sdmmc:fuchsia.hardware.sdmmc_banjo_cpp",
      "//sdk/banjo/fuchsia.hardware.serial:fuchsia.hardware.serial_banjo_cpp",
      "//sdk/banjo/fuchsia.sysmem:fuchsia.sysmem_banjo_c",
      "//sdk/fidl/fuchsia.hardware.gpu.amlogic:fuchsia.hardware.gpu.amlogic_llcpp",
      "//sdk/fidl/fuchsia.hardware.serial:fuchsia.hardware.serial_c",
      "//sdk/fidl/fuchsia.hardware.thermal:fuchsia.hardware.thermal_c",
      "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_c",
      "//src/connectivity/openthread/lib/ot-radio",
      "//src/devices/bind/fuchsia.ams.platform:bind.fuchsia.ams.platform",
      "//src/devices/lib/amlogic",
      "//src/devices/lib/broadcom",
      "//src/devices/lib/driver",
      "//src/devices/lib/fidl-metadata",
      "//src/devices/lib/focaltech",
      "//src/devices/lib/metadata:llcpp",
      "//src/devices/lib/mmio",
      "//src/devices/lib/thermal",
      "//src/devices/lib/ti",
      "//src/devices/usb/lib/usb",
      "//src/graphics/display/lib/device-protocol-display",
      "//src/lib/ddk",
      "//src/lib/ddk:ddk-metadata-headers",

      # TODO(fxb/38132): Migrate to the new bind rules and delete the below
      "//src/lib/ddk:ddk-deprecated-binding-headers",
      "//src/lib/ddktl",
      "//zircon/public/lib/zircon-internal",
      "//zircon/system/ulib/fbl",
      "//zircon/system/ulib/hwreg",
      "//zircon/system/ulib/inspect",
      "//zircon/system/ulib/zx",
    ]

    # We need both headers to build but we can only depend on one bindfile at a time.
    deps += [
      ":luis-bind_header",
      ":sherlock-bind_header",
    ]

    if (defined(is_luis) && is_luis) {
      defines = [ "IS_LUIS=1" ]
      deps += [ ":luis-bind" ]
    } else {
      deps += [ ":sherlock-bind" ]
    }
  }

  fuchsia_driver_component(target_name) {
    deps = [ ":${target_name}-driver" ]
  }
}

sherlock_driver("sherlock") {
  use_factory = false
  enable_rndis = false
}

sherlock_driver("sherlock-factory") {
  use_factory = true
  enable_rndis = false
}

sherlock_driver("sherlock-factory-rndis") {
  use_factory = true
  enable_rndis = true
}

sherlock_driver("luis") {
  use_factory = false
  enable_rndis = false
  is_luis = true
}

sherlock_driver("luis-factory") {
  use_factory = true
  enable_rndis = false
  is_luis = true
}

sherlock_driver("luis-factory-rndis") {
  use_factory = true
  enable_rndis = true
  is_luis = true
}

group("tests") {
  testonly = true
  deps = [
    ":luis-bind_test",
    ":sherlock-bind_test",
  ]
}
