# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/drivers.gni")

driver_bind_rules("vim2-bind") {
  rules = "vim2.bind"
  header_output = "vim2-bind.h"
  tests = "bind-tests.json"
  deps = [
    "//src/devices/bind/fuchsia.khadas.platform",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("display_bind") {
  rules = "bind/display.bind"
  header_output = "display_bind.h"
  bind_output = "display_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.s912",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.khadas.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
  ]
}

driver_bind_rules("aml_emmc_bind") {
  rules = "bind/aml_emmc.bind"
  header_output = "aml_emmc_bind.h"
  bind_output = "aml_emmc_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.s912",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("ethernet_mac_bind") {
  rules = "bind/ethernet_mac.bind"
  header_output = "ethernet_mac_bind.h"
  bind_output = "ethernet_mac_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.s912",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.i2c",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("dwmac_bind") {
  rules = "bind/dwmac.bind"
  header_output = "dwmac_bind.h"
  bind_output = "dwmac_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.designware.platform",
    "//src/devices/bind/fuchsia.ethernet",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("gpio_light_bind") {
  rules = "bind/gpio_light.bind"
  header_output = "gpio_light_bind.h"
  bind_output = "gpio_light_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.s912",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("mali_bind") {
  rules = "bind/mali.bind"
  header_output = "mali_bind.h"
  bind_output = "mali_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.registers",
  ]
}

driver_bind_rules("aml_sdio_bind") {
  rules = "bind/aml_sdio.bind"
  header_output = "aml_sdio_bind.h"
  bind_output = "aml_sdio_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.s912",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("wifi_bind") {
  rules = "bind/wifi.bind"
  header_output = "wifi_bind.h"
  bind_output = "wifi_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.s912",
    "//src/devices/bind/fuchsia.broadcom.sdio",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.sdmmc",
  ]
}

driver_bind_rules("vim_thermal_bind") {
  rules = "bind/vim_thermal.bind"
  header_output = "vim_thermal_bind.h"
  bind_output = "vim_thermal_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.s912",
    "//src/devices/bind/fuchsia.gpio",
  ]
}

driver_bind_rules("aml_video_bind") {
  rules = "bind/aml_video.bind"
  header_output = "aml_video_bind.h"
  bind_output = "aml_video_bind.bc"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
  ]
}

fuchsia_driver("vim2-driver") {
  output_name = "vim2"
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  sources = [
    "vim-canvas.cc",
    "vim-clk.cc",
    "vim-display.cc",
    "vim-emmc.cc",
    "vim-eth.cc",
    "vim-gpio.cc",
    "vim-i2c.cc",
    "vim-mali.cc",
    "vim-registers.cc",
    "vim-sd.cc",
    "vim-sdio.cc",
    "vim-sysmem.cc",
    "vim-thermal.cc",
    "vim-uart.cc",
    "vim-usb.cc",
    "vim-video.cc",
    "vim.cc",
  ]
  deps = [
    ":aml_emmc_bind_header",
    ":aml_sdio_bind_header",
    ":aml_video_bind_header",
    ":display_bind_header",
    ":dwmac_bind_header",
    ":ethernet_mac_bind_header",
    ":gpio_light_bind_header",
    ":mali_bind_header",
    ":vim2-bind",
    ":vim_thermal_bind_header",
    ":wifi_bind_header",
    "//sdk/banjo/fuchsia.hardware.ethernet:fuchsia.hardware.ethernet_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.gpio:fuchsia.hardware.gpio_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.gpioimpl:fuchsia.hardware.gpioimpl_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.iommu:fuchsia.hardware.iommu_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.platform.bus:fuchsia.hardware.platform.bus_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.scpi:fuchsia.hardware.scpi_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.sdmmc:fuchsia.hardware.sdmmc_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.serial:fuchsia.hardware.serial_banjo_cpp",
    "//sdk/banjo/fuchsia.sysmem:fuchsia.sysmem_banjo_c",
    "//sdk/fidl/fuchsia.hardware.serial:fuchsia.hardware.serial_c",
    "//sdk/fidl/fuchsia.hardware.thermal:fuchsia.hardware.thermal_llcpp",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_c",
    "//src/devices/lib/amlogic",
    "//src/devices/lib/broadcom",
    "//src/devices/lib/driver",
    "//src/devices/lib/fidl-metadata",
    "//src/devices/lib/metadata:llcpp",
    "//src/devices/lib/mmio",
    "//src/lib/ddk",
    "//src/lib/ddk:ddk-metadata-headers",

    # TODO(fxb/38132): Migrate to the new bind rules and delete the below
    "//src/lib/ddk:ddk-deprecated-binding-headers",
    "//src/lib/ddktl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_driver_component("vim2") {
  component_name = "vim2"
  deps = [ ":vim2-driver" ]
}

group("tests") {
  testonly = true
  deps = [ ":vim2-bind_test" ]
}
