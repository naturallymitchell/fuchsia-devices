# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")
import("//build/unification/images/migrated_manifest.gni")

source_set("common") {
  visibility = [ ":*" ]

  sources = [
    "broker-test.cc",
    "parent.cc",
  ]
  public_deps = [
    "//sdk/banjo/ddk.protocol.nand",
    "//sdk/fidl/fuchsia.nand:fuchsia.nand_c",
    "//zircon/public/lib/devmgr-integration-test",
    "//zircon/public/lib/devmgr-launcher",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fdio",
    "//zircon/public/lib/fdio-caller",
    "//zircon/public/lib/fzl",
    "//zircon/public/lib/ramdevice-client",
    "//zircon/public/lib/zx",
    "//zircon/public/lib/zxtest",
    "//zircon/system/fidl/fuchsia-device:llcpp",
    "//zircon/system/fidl/fuchsia-hardware-nand:c",
  ]
}

test("nand-broker") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [ "main.cc" ]
  deps = [ ":common" ]
}

test("nandpart-broker") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [ "nandpart-main.cc" ]
  deps = [ ":common" ]
}

migrated_manifest("nand-broker-manifest") {
  deps = [ ":nand-broker" ]
}

migrated_manifest("nandpart-broker-manifest") {
  deps = [ ":nandpart-broker" ]
}
