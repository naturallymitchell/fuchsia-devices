# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/fuchsia/rules.gni")
import("//build/test.gni")
import("//build/unification/images/migrated_manifest.gni")

driver_module("virtio_block") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [ "block_driver.cc" ]
  deps = [
    ":block_lib",
    ":common",
    "//src/devices/lib/driver",
    "//zircon/public/lib/ddktl",
    "//zircon/system/banjo/ddk.protocol.block",
  ]
}

source_set("block_lib") {
  defines = [ "_ALL_SOURCE" ]
  sources = [ "block.cc" ]
  public_deps = [
    ":common",
    "//zircon/public/lib/ddktl",
    "//zircon/system/banjo/ddk.protocol.block",
  ]
}

driver_module("virtio_gpu") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [ "gpu_driver.cc" ]
  deps = [
    ":common",
    ":gpu_lib",
    "//src/devices/lib/driver",
    "//zircon/public/lib/ddktl",
  ]
}

source_set("gpu_lib") {
  defines = [ "_ALL_SOURCE" ]
  sources = [ "gpu.cc" ]
  public_deps = [
    ":common",
    "//zircon/public/lib/ddktl",
    "//zircon/public/lib/image-format",
    "//zircon/system/banjo/ddk.protocol.display.controller",
    "//zircon/system/banjo/ddk.protocol.sysmem",
    "//zircon/system/fidl/fuchsia-sysmem:llcpp",
  ]
}

driver_module("virtio_input") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [
    "input.cc",
    "input_driver.cc",
    "input_kbd.cc",
    "input_touch.cc",
  ]
  deps = [
    ":common",
    "//src/devices/lib/driver",
    "//zircon/public/lib/ddktl",
    "//zircon/public/lib/hid",
    "//zircon/system/banjo/ddk.protocol.hidbus",
    "//zircon/system/fidl/fuchsia-hardware-pty:c",
  ]
}

driver_module("virtio_console") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [
    "console.cc",
    "console_driver.cc",
  ]
  deps = [
    ":common",
    "//src/devices/lib/driver",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/ddktl",
    "//zircon/public/lib/fs",
    "//zircon/public/lib/fs-pty",
    "//zircon/system/fidl/fuchsia-hardware-pty:c",
    "//zircon/system/fidl/fuchsia-hardware-virtioconsole:llcpp",
  ]
}

driver_module("virtio_ethernet") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [
    "ethernet.cc",
    "ethernet_driver.cc",
  ]
  deps = [
    ":common",
    "//src/devices/lib/driver",
    "//zircon/public/lib/ddktl",
    "//zircon/public/lib/dev-operation",
    "//zircon/system/banjo/ddk.protocol.ethernet",
  ]
}

driver_module("virtio_rng") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [
    "rng.cc",
    "rng_driver.cc",
  ]
  deps = [
    ":common",
    "//src/devices/lib/driver",
    "//zircon/public/lib/ddktl",
  ]
}

driver_module("virtio_scsi") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [ "scsi_driver.cc" ]
  deps = [
    ":common",
    ":scsi_lib",
    "//src/devices/lib/driver",
    "//zircon/public/lib/ddktl",
  ]
}

source_set("scsi_lib") {
  defines = [ "_ALL_SOURCE" ]
  sources = [ "scsi.cc" ]
  public_deps = [
    ":common",
    "//zircon/public/lib/ddktl",
    "//zircon/public/lib/scsi",
    "//zircon/system/banjo/ddk.protocol.block",
  ]
}

driver_module("virtio_socket") {
  defines = [ "_ALL_SOURCE" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  sources = [
    "socket.cc",
    "socket_driver.cc",
  ]
  deps = [
    ":common",
    "//src/devices/lib/driver",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/ddktl",
    "//zircon/system/fidl/fuchsia-hardware-vsock:c",
  ]
}

source_set("common") {
  visibility = [ ":*" ]
  defines = [ "_ALL_SOURCE" ]
  sources = [
    "backends/pci.cc",
    "backends/pci_legacy.cc",
    "backends/pci_modern.cc",
    "device.cc",
    "driver_utils.cc",
    "driver_utils.h",
    "ring.cc",
  ]
  public_deps = [
    "//zircon/public/lib/ddk",
    "//zircon/public/lib/ddktl",
    "//zircon/public/lib/device-protocol-pci",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fit",
    "//zircon/public/lib/hid",
    "//zircon/public/lib/hwreg",
    "//zircon/public/lib/mmio",
    "//zircon/public/lib/pretty",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/virtio",
    "//zircon/public/lib/zircon-internal",
    "//zircon/public/lib/zx",
    "//zircon/system/banjo/ddk.protocol.pci",
  ]
}

test("virtio-test") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [
    "block_test.cc",
    "gpu_test.cc",
    "scsi_test.cc",
  ]
  deps = [
    ":block_lib",
    ":common",
    ":gpu_lib",
    ":scsi_lib",
    "//src/devices/lib/driver",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/fake-bti",
    "//zircon/public/lib/fake_ddk",
    "//zircon/public/lib/fidl-async-cpp",
    "//zircon/public/lib/unittest",
    "//zircon/public/lib/zxtest",
  ]
}

migrated_manifest("virtio_block-manifest") {
  deps = [ ":virtio_block" ]
}

migrated_manifest("virtio_gpu-manifest") {
  deps = [ ":virtio_gpu" ]
}

migrated_manifest("virtio_input-manifest") {
  deps = [ ":virtio_input" ]
}

migrated_manifest("virtio_console-manifest") {
  deps = [ ":virtio_console" ]
}

migrated_manifest("virtio_ethernet-manifest") {
  deps = [ ":virtio_ethernet" ]
}

migrated_manifest("virtio_rng-manifest") {
  deps = [ ":virtio_rng" ]
}

migrated_manifest("virtio_scsi-manifest") {
  deps = [ ":virtio_scsi" ]
}

migrated_manifest("virtio_socket-manifest") {
  deps = [ ":virtio_socket" ]
}

migrated_manifest("virtio-test-manifest") {
  deps = [ ":virtio-test" ]
}
